class MyStack {
public:
/* Algorithm : Using Single Queue */
    queue<int>q1;
  
    int front;
    MyStack() {
        
    }
    
    void push(int x) {
        q1.push(x);
        int d = q1.size()-1;
        while(d--){
            q1.push(q1.front());
            q1.pop();
        }
        
    }
    
    int pop() {
        if(empty()){
            return -1;
        }
        int popElem = q1.front();
        q1.pop();
        return popElem;
    }
    
    int top() {
        if(empty()){
            return -1;
        }
        return q1.front();
    }
    
    bool empty() {
        if(q1.empty()){
            return true;
        }
        else{
            return false;
        }
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
